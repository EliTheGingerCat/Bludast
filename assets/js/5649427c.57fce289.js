"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5355],{13455:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Arguments can be:\\n- nil, nil\\n- Position, number\\n- Position, Position\\n- Location, Location","params":[{"name":"nil","desc":"","lua_type":"| Position | Location"},{"name":"finish","desc":"","lua_type":"nil | Position | number | Location"}],"returns":[{"desc":"","lua_type":"Location"}],"function_type":"static","since":"v0.1.0","source":{"line":44,"path":"src/Ast/Location.luau"}},{"name":"is","desc":"Returns the object if it is a Location object.","params":[{"name":"object","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"Location?"}],"function_type":"static","since":"v0.1.0","source":{"line":89,"path":"src/Ast/Location.luau"}},{"name":"__eq","desc":"Locations can be compared with just the equals sign.\\n\\n```lua\\nlocal one = Location.new()\\nlocal two = Location.new()\\nassert(one == two)\\n```","params":[{"name":"rhs","desc":"","lua_type":"Location"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","tags":["metamethod"],"since":"v0.1.0","source":{"line":112,"path":"src/Ast/Location.luau"}},{"name":"encloses","desc":"Whether the given Location is fully within self, inclusive.","params":[{"name":"l","desc":"","lua_type":"Location"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","since":"v0.1.0","source":{"line":124,"path":"src/Ast/Location.luau"}},{"name":"overlaps","desc":"Whether the given Location intersects with self at all, inclusive.","params":[{"name":"l","desc":"","lua_type":"Location"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","since":"v0.1.0","source":{"line":136,"path":"src/Ast/Location.luau"}},{"name":"contains","desc":"Whether the given Position is within the bounds of self, except that it can not be at `self.finish`.","params":[{"name":"p","desc":"","lua_type":"Position"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","since":"v0.1.0","source":{"line":148,"path":"src/Ast/Location.luau"}},{"name":"containsClosed","desc":"Whether the given Position is within the bounds of self, inclusive.","params":[{"name":"p","desc":"","lua_type":"Position"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","since":"v0.1.0","source":{"line":160,"path":"src/Ast/Location.luau"}},{"name":"extend","desc":"Ensures that both bounds are further than or at `other`\'s bounds, respectively.","params":[{"name":"other","desc":"","lua_type":"Location"}],"returns":[],"function_type":"method","since":"v0.1.0","source":{"line":171,"path":"src/Ast/Location.luau"}},{"name":"shift","desc":"Shifts both of self\'s Positions by `oldEnd` and `newEnd`.","params":[{"name":"start","desc":"","lua_type":"Position"},{"name":"oldEnd","desc":"","lua_type":"Position"},{"name":"newEnd","desc":"","lua_type":"Position"}],"returns":[],"function_type":"method","since":"v0.1.0","source":{"line":189,"path":"src/Ast/Location.luau"}}],"properties":[{"name":"begin","desc":"","lua_type":"Position","since":"v0.1.0","readonly":true,"source":{"line":11,"path":"src/Ast/Location.luau"}},{"name":"finish","desc":"","lua_type":"Position","since":"v0.1.0","readonly":true,"source":{"line":17,"path":"src/Ast/Location.luau"}}],"types":[],"name":"Location","desc":"Struct from `root/Ast/src/Location.cpp`.","source":{"line":23,"path":"src/Ast/Location.luau"}}')}}]);