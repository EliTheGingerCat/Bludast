"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4426],{79071:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"","params":[],"returns":[{"desc":"","lua_type":"Vector<any>\\r\\n"}],"function_type":"static","since":"v0.1.0","source":{"line":64,"path":"src/Ast/Vector.luau"}},{"name":"reserve","desc":"Ensure the vector capacity is *at least* this size.","params":[{"name":"self","desc":"","lua_type":"Vector<any>"},{"name":"n","desc":"","lua_type":"number"}],"returns":[],"function_type":"static","since":"v0.1.0","source":{"line":77,"path":"src/Ast/Vector.luau"}},{"name":"resize","desc":"Sets the vector size and capacity to `count` exactly, filling empty spaces with `value`.","params":[{"name":"self","desc":"","lua_type":"Vector<T>"},{"name":"count","desc":"","lua_type":"number"},{"name":"value","desc":"","lua_type":"T"}],"returns":[],"function_type":"static","since":"v0.1.0","source":{"line":91,"path":"src/Ast/Vector.luau"}},{"name":"assign","desc":"Essentially [table.create](https://create.roblox.com/docs/reference/engine/libraries/table#create).","params":[{"name":"self","desc":"","lua_type":"Vector<any>"},{"name":"n","desc":"","lua_type":"number"},{"name":"val","desc":"","lua_type":"any"}],"returns":[],"function_type":"static","since":"v0.1.0","source":{"line":111,"path":"src/Ast/Vector.luau"}},{"name":"back","desc":"Gets the item at the end.","params":[{"name":"self","desc":"","lua_type":"Vector<T>"}],"returns":[{"desc":"","lua_type":"T\\r\\n"}],"function_type":"static","since":"v0.1.0","source":{"line":122,"path":"src/Ast/Vector.luau"}},{"name":"clear","desc":"","params":[{"name":"self","desc":"","lua_type":"Vector<any>"}],"returns":[],"function_type":"static","since":"v0.1.0","source":{"line":131,"path":"src/Ast/Vector.luau"}},{"name":"empty","desc":"","params":[{"name":"self","desc":"","lua_type":"Vector<any>"}],"returns":[{"desc":"","lua_type":"boolean\\r\\n"}],"function_type":"static","since":"v0.1.0","source":{"line":140,"path":"src/Ast/Vector.luau"}},{"name":"erase","desc":"Overloads:\\n- first: number, last: number\\n- position: number -- the same as passing `erase(position, position)` \\n\\nSet an index or a range to empty.","params":[{"name":"first","desc":"","lua_type":"number"},{"name":"last","desc":"","lua_type":"number"}],"returns":[],"function_type":"method","since":"v0.1.0","source":{"line":157,"path":"src/Ast/Vector.luau"}},{"name":"front","desc":"","params":[{"name":"self","desc":"","lua_type":"Vector<T>"}],"returns":[{"desc":"","lua_type":"T\\r\\n"}],"function_type":"static","since":"v0.1.0","source":{"line":180,"path":"src/Ast/Vector.luau"}},{"name":"get","desc":"Use this method to index the inner array. The `__index` metamethod could be employed instead, but this would ruin typechecking unless methods are typed statically.","params":[{"name":"self","desc":"","lua_type":"Vector<T>"},{"name":"index","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"T\\r\\n"}],"function_type":"static","since":"v0.1.0","source":{"line":191,"path":"src/Ast/Vector.luau"}},{"name":"size","desc":"","params":[{"name":"self","desc":"","lua_type":"Vector<any>"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","since":"v0.1.0","source":{"line":200,"path":"src/Ast/Vector.luau"}},{"name":"copy_range","desc":"Returns a copy of the inner data. Only used by [TempVector].","params":[{"name":"self","desc":"","lua_type":"Vector<T>"},{"name":"from","desc":"","lua_type":"number"},{"name":"to","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"{T}\\r\\n"}],"function_type":"static","since":"v0.1.0","source":{"line":210,"path":"src/Ast/Vector.luau"}},{"name":"data","desc":"Returns the inner array.\\n\\n:::danger\\n\\nThe inner array must not be mutated.\\n\\n:::","params":[{"name":"self","desc":"","lua_type":"Vector<T>"}],"returns":[{"desc":"","lua_type":"{T}\\r\\n"}],"function_type":"static","since":"v0.1.0","source":{"line":227,"path":"src/Ast/Vector.luau"}},{"name":"pop_back","desc":"Removes the value at the end.","params":[],"returns":[],"function_type":"method","source":{"line":237,"path":"src/Ast/Vector.luau"}},{"name":"push_back","desc":"Adds a new value at the end.","params":[{"name":"self","desc":"","lua_type":"Vector<T>"},{"name":"val","desc":"","lua_type":"T"}],"returns":[],"function_type":"static","since":"v0.1.0","source":{"line":248,"path":"src/Ast/Vector.luau"}},{"name":"emplace_back","desc":"Alias for [push_back](Vector#push_back).","params":[{"name":"val","desc":"","lua_type":"T"}],"returns":[],"function_type":"method","since":"v0.1.0","source":{"line":261,"path":"src/Ast/Vector.luau"}},{"name":"set","desc":"","params":[{"name":"self","desc":"","lua_type":"Vector<T>"},{"name":"index","desc":"","lua_type":"number"},{"name":"value","desc":"","lua_type":"T"}],"returns":[],"function_type":"static","since":"v0.1.0","source":{"line":269,"path":"src/Ast/Vector.luau"}},{"name":"set_increment","desc":"","params":[{"name":"self","desc":"","lua_type":"Vector<number>"},{"name":"index","desc":"","lua_type":"number"}],"returns":[],"function_type":"static","since":"v0.1.0","source":{"line":278,"path":"src/Ast/Vector.luau"}},{"name":"set_decrement","desc":"","params":[{"name":"self","desc":"","lua_type":"Vector<number>"},{"name":"index","desc":"","lua_type":"number"}],"returns":[],"function_type":"static","since":"v0.1.0","source":{"line":286,"path":"src/Ast/Vector.luau"}},{"name":"check","desc":"Used for debugging.","params":[{"name":"self","desc":"","lua_type":"Vector<any>"}],"returns":[],"function_type":"static","since":"v0.1.0","private":true,"source":{"line":297,"path":"src/Ast/Vector.luau"}}],"properties":[{"name":"_data","desc":"The underlying table.","lua_type":"{T}","since":"v0.1.0","private":true,"readonly":true,"source":{"line":20,"path":"src/Ast/Vector.luau"}},{"name":"_size","desc":"The amount of elements in the table, not including [EMPTY](Vector#EMPTY) values.","lua_type":"number","since":"v0.1.0","private":true,"readonly":true,"source":{"line":29,"path":"src/Ast/Vector.luau"}},{"name":"EMPTY","desc":"A value that represents nothing, used to prevent the key from being deallocated to (hopefully) improve performance. Displays as \\"EMPTY\\" when printed.","lua_type":"{}","tags":["local"],"since":"v0.1.0","private":true,"readonly":true,"source":{"line":41,"path":"src/Ast/Vector.luau"}}],"types":[],"name":"Vector","desc":"Class template from [C++ std](https://cplusplus.com/reference/vector/vector/).","source":{"line":5,"path":"src/Ast/Vector.luau"}}')}}]);